/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hasar_takip_sistemi_odev_final;

import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author veliakdeniz
 */
public class borc extends javax.swing.JFrame {

    DefaultTableModel dtm = new DefaultTableModel();

    /**
     * Creates new form borc
     */
    public borc() {
        initComponents();
        dtm.setColumnIdentifiers(new Object[]{"Id", "Adı", "Soyadı", "Borç"});
        setTablo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablo = new javax.swing.JTable();
        girilen = new javax.swing.JButton();
        miktar = new javax.swing.JTextField();
        tumBorc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablo);

        girilen.setText("Girilen Miktar Kadar Ödeme Yap");
        girilen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                girilenActionPerformed(evt);
            }
        });

        miktar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                miktarKeyReleased(evt);
            }
        });

        tumBorc.setText("Tüm Borcu Öde");
        tumBorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tumBorcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(girilen))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(tumBorc)))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(miktar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addComponent(miktar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(girilen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tumBorc)
                .addGap(330, 330, 330))
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void girilenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_girilenActionPerformed
        if (tablo.getSelectedRow() == -1) {
            return;
        }
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();

        int id = ((Musteri) tablo.getValueAt(tablo.getSelectedRow(), 1)).getId();
        Query q = em.createQuery("select m from Musteri m where m.id= " + id);
        List<Musteri> musteriler = q.getResultList();
        int ödeme = Integer.parseInt(miktar.getText());
        for (Musteri m : musteriler) {

            if (Integer.parseInt(miktar.getText()) > m.getBorc()) {
                JOptionPane.showMessageDialog(rootPane, "Girilen Miktar Müşterinin Borcundan Daha Büyük", "Hata", JOptionPane.WARNING_MESSAGE);
            } else {

                m.setBorc(m.getBorc() - ödeme);

            }
        }
        em.getTransaction().commit();
        em.close();
        emf.close();
        setTablo();
    }//GEN-LAST:event_girilenActionPerformed

    private void miktarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_miktarKeyReleased
        char[] a = miktar.getText().toCharArray();
        int sayac = 0;
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < a.length; i++) {
            if (Character.isLetter(a[i])) {

                if (sayac == 0) {
                    sayac++;
                    JOptionPane.showMessageDialog(rootPane, "Id kısmına harf girilemez", "Hata", JOptionPane.WARNING_MESSAGE);

                }

            } else {
                sb.append(a[i]);
            }
            miktar.setText(String.valueOf(sb));
        }
    }//GEN-LAST:event_miktarKeyReleased

    private void tumBorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tumBorcActionPerformed

        if (tablo.getSelectedRow() == -1) {
            return;
        }

        int i = JOptionPane.showConfirmDialog(rootPane, "Borç sıfırlansın mı ?", "Emin misiniz ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (i == 0) {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            int id = ((Musteri) tablo.getValueAt(tablo.getSelectedRow(), 1)).getId();
            Query q = em.createQuery("select m from Musteri m where m.id= " + id);
            List<Musteri> musteriler = q.getResultList();

            for (Musteri m : musteriler) {

                m.setBorc(0);

            }
            em.getTransaction().commit();
            em.close();
            emf.close();
            setTablo();
        }

    }//GEN-LAST:event_tumBorcActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(borc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(borc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(borc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(borc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new borc().setVisible(true);
            }
        });
    }

    public void setTablo() {

        dtm.setRowCount(0);

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
        Query q = em.createQuery("select m from Musteri m ");
        List<Musteri> musteriler = q.getResultList();

        for (Musteri m : musteriler) {
            dtm.addRow(new Object[]{m.getId(), m, m.getSoyadi(), m.getBorc()});
        }
        tablo.setModel(dtm);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton girilen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField miktar;
    private javax.swing.JTable tablo;
    private javax.swing.JButton tumBorc;
    // End of variables declaration//GEN-END:variables
}

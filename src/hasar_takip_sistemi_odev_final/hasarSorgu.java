/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hasar_takip_sistemi_odev_final;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author veliakdeniz
 */
public class hasarSorgu extends javax.swing.JFrame {
    
    DefaultTableModel dtm = new DefaultTableModel();

    /**
     * Creates new form hasarSorgu
     */
    public hasarSorgu() {
        initComponents();
        dtm.setColumnIdentifiers(new Object[]{"Hasar Id", "Müşteri Id", "Araç Id", "Araç Türü", "Araç Model", "Parça", "Kalite", "Fiyat", "Tarih"});
        
        setTablo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablo = new javax.swing.JTable();
        sil = new javax.swing.JButton();
        aktar = new javax.swing.JButton();
        datAktar = new javax.swing.JButton();
        datOku = new javax.swing.JButton();
        geri = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablo);

        sil.setText("Kaydı Sil");
        sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silActionPerformed(evt);
            }
        });

        aktar.setText("Kayıtları Text Dosyasına Aktar");
        aktar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aktarActionPerformed(evt);
            }
        });

        datAktar.setText("Kayıtları Dat Dosyasına Aktar");
        datAktar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datAktarActionPerformed(evt);
            }
        });

        datOku.setText("Kayıtları Dat Dosyasından Oku");
        datOku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datOkuActionPerformed(evt);
            }
        });

        geri.setText("Geri Dön");
        geri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(sil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datOku)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(aktar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(datAktar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(geri)
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(aktar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sil)
                    .addComponent(datAktar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datOku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(geri)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aktarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aktarActionPerformed
        BufferedWriter br = null;
        
        int i = JOptionPane.showConfirmDialog(rootPane, "Kayıtlar dosyaya aktarılsın mı ? ?", "Emin misiniz ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (i == 0) {
            try {
                String dosya = "/Users/veliakdeniz/Desktop/test/HasarListe.txt";
                
                br = new BufferedWriter(new FileWriter(dosya));
                
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
                EntityManager em = emf.createEntityManager();
                em.getTransaction().begin();
                Query q = em.createQuery("select h from Hasarkayit h");
                List<Hasarkayit> hasar = q.getResultList();
                
                for (Hasarkayit h : hasar) {
                    br.write("\n" + "\n" + "Hasar id  : " + h.getHasarid() + "   Müşteri id : " + h.getMusteriId() + "  Araç Türü : " + h.getAracTuru() + "  Araç Modeli : " + h.getAracModel() + "  Değişen Parça : " + h.getParca() + "  Parça Kalitesi : " + h.getKalite() + "  Fiyat : " + h.getFiyat() + "  Tarih : " + h.getTarih() + " ");
                }
                em.close();
                emf.close();
            } catch (IOException ex) {
                Logger.getLogger(borc.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    br.close();
                } catch (IOException ex) {
                    Logger.getLogger(borc.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_aktarActionPerformed

    private void silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silActionPerformed
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
        
        int id = ((Hasarkayit) tablo.getValueAt(tablo.getSelectedRow(), 5)).getHasarid();
        Query q = em.createQuery("select h from Hasarkayit h where h.hasarid= " + id);
        List<Hasarkayit> hasar = q.getResultList();
        for (Hasarkayit hasarkayit : hasar) {
            em.remove(hasarkayit);
        }
        em.getTransaction().commit();
        em.close();
        emf.close();
        setTablo();
    }//GEN-LAST:event_silActionPerformed

    private void geriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geriActionPerformed
        setTablo();

    }//GEN-LAST:event_geriActionPerformed

    private void datAktarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datAktarActionPerformed
        ObjectOutputStream oos = null;
        try {
            String dosya = "/Users/veliakdeniz/Desktop/text/HasarListe.dat";
            oos = new ObjectOutputStream(
                    new BufferedOutputStream(
                            new FileOutputStream(dosya)));
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
            EntityManager em = emf.createEntityManager();
            Query q = em.createQuery("select h from Hasarkayit h");
            
            oos.writeObject(q.getResultList());
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(hasarSorgu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(hasarSorgu.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                oos.close();
            } catch (IOException ex) {
                Logger.getLogger(hasarSorgu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_datAktarActionPerformed

    private void datOkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datOkuActionPerformed
        
        ObjectInputStream ois = null;
        try {
            String dosya = "/Users/veliakdeniz/Desktop/text/HasarListe.dat";
            ois = new ObjectInputStream(new BufferedInputStream(new FileInputStream(dosya)));
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
            EntityManager em = emf.createEntityManager();
            List<Hasarkayit> kayitlar = (List<Hasarkayit>) ois.readObject();
            dtm.setRowCount(0);
            
            for (Hasarkayit h : kayitlar) {
                dtm.addRow(new Object[]{h.getHasarid(), h.getMusteriId(), h.getAracId(), h.getAracTuru(), h.getAracModel(), h, h.getKalite(), h.getFiyat(), h.getTarih().getDate() + "-" + Calendar.DATE + "-" + 2019});
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(musteriler.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(musteriler.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(musteriler.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ois.close();
            } catch (IOException ex) {
                Logger.getLogger(musteriler.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_datOkuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hasarSorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hasarSorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hasarSorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hasarSorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hasarSorgu().setVisible(true);
            }
        });
    }
    
    public void setTablo() {
        dtm.setRowCount(0);
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("odev");
        EntityManager em = emf.createEntityManager();
        em.getTransaction().begin();
        Query q = em.createQuery("select h from Hasarkayit h ");
        List<Hasarkayit> hasarlar = q.getResultList();
        for (Hasarkayit h : hasarlar) {
            dtm.addRow(new Object[]{h.getHasarid(), h.getMusteriId(), h.getAracId(), h.getAracTuru(), h.getAracModel(), h, h.getKalite(), h.getFiyat(), h.getTarih().getDate() + "-" + Calendar.DATE + "-" + 2019});
            tablo.setModel(dtm);
        }
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aktar;
    private javax.swing.JButton datAktar;
    private javax.swing.JButton datOku;
    private javax.swing.JButton geri;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sil;
    private javax.swing.JTable tablo;
    // End of variables declaration//GEN-END:variables
}
